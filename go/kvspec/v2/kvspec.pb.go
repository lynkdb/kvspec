// Copyright 2015 Eryx <evorui аt gmаil dοt cοm>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.5.0
// source: kvspec.proto

package kvspec

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ObjectMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty" toml:"key,omitempty"`
	Version   uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	IncrId    uint64 `protobuf:"varint,3,opt,name=incr_id,json=incrId,proto3" json:"incr_id,omitempty" toml:"incr_id,omitempty"`
	Created   uint64 `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty" toml:"created,omitempty"`
	Updated   uint64 `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
	Attrs     uint64 `protobuf:"varint,6,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
	Expired   uint64 `protobuf:"varint,11,opt,name=expired,proto3" json:"expired,omitempty" toml:"expired,omitempty"`
	DataAttrs uint64 `protobuf:"varint,12,opt,name=data_attrs,json=dataAttrs,proto3" json:"data_attrs,omitempty" toml:"data_attrs,omitempty"`
	DataCheck uint64 `protobuf:"varint,13,opt,name=data_check,json=dataCheck,proto3" json:"data_check,omitempty" toml:"data_check,omitempty"`
}

func (x *ObjectMeta) Reset() {
	*x = ObjectMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectMeta) ProtoMessage() {}

func (x *ObjectMeta) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectMeta.ProtoReflect.Descriptor instead.
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectMeta) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ObjectMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ObjectMeta) GetIncrId() uint64 {
	if x != nil {
		return x.IncrId
	}
	return 0
}

func (x *ObjectMeta) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ObjectMeta) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ObjectMeta) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *ObjectMeta) GetExpired() uint64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

func (x *ObjectMeta) GetDataAttrs() uint64 {
	if x != nil {
		return x.DataAttrs
	}
	return 0
}

func (x *ObjectMeta) GetDataCheck() uint64 {
	if x != nil {
		return x.DataCheck
	}
	return 0
}

type ObjectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrs uint64 `protobuf:"varint,8,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
	Check uint64 `protobuf:"varint,9,opt,name=check,proto3" json:"check,omitempty" toml:"check,omitempty"`
	Value []byte `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty" toml:"value,omitempty"`
}

func (x *ObjectData) Reset() {
	*x = ObjectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectData) ProtoMessage() {}

func (x *ObjectData) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectData.ProtoReflect.Descriptor instead.
func (*ObjectData) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectData) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *ObjectData) GetCheck() uint64 {
	if x != nil {
		return x.Check
	}
	return 0
}

func (x *ObjectData) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ObjectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *ObjectMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Data *ObjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty"`
}

func (x *ObjectItem) Reset() {
	*x = ObjectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectItem) ProtoMessage() {}

func (x *ObjectItem) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectItem.ProtoReflect.Descriptor instead.
func (*ObjectItem) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectItem) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ObjectItem) GetData() *ObjectData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ObjectReader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      uint64   `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty" toml:"mode,omitempty"`
	Keys      [][]byte `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty" toml:"keys,omitempty"`
	TableName string   `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty" toml:"table_name,omitempty"`
	Attrs     uint64   `protobuf:"varint,6,opt,name=attrs,proto3" json:"attrs,omitempty" toml:"attrs,omitempty"`
	LimitNum  int64    `protobuf:"varint,8,opt,name=limit_num,json=limitNum,proto3" json:"limit_num,omitempty" toml:"limit_num,omitempty"`
	LimitSize int64    `protobuf:"varint,9,opt,name=limit_size,json=limitSize,proto3" json:"limit_size,omitempty" toml:"limit_size,omitempty"`
	KeyOffset []byte   `protobuf:"bytes,12,opt,name=key_offset,json=keyOffset,proto3" json:"key_offset,omitempty" toml:"key_offset,omitempty"`
	KeyCutset []byte   `protobuf:"bytes,13,opt,name=key_cutset,json=keyCutset,proto3" json:"key_cutset,omitempty" toml:"key_cutset,omitempty"`
	LogOffset uint64   `protobuf:"varint,14,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty" toml:"log_offset,omitempty"`
	WaitTime  int64    `protobuf:"varint,16,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty" toml:"wait_time,omitempty"`
}

func (x *ObjectReader) Reset() {
	*x = ObjectReader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectReader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectReader) ProtoMessage() {}

func (x *ObjectReader) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectReader.ProtoReflect.Descriptor instead.
func (*ObjectReader) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectReader) GetMode() uint64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *ObjectReader) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ObjectReader) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ObjectReader) GetAttrs() uint64 {
	if x != nil {
		return x.Attrs
	}
	return 0
}

func (x *ObjectReader) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *ObjectReader) GetLimitSize() int64 {
	if x != nil {
		return x.LimitSize
	}
	return 0
}

func (x *ObjectReader) GetKeyOffset() []byte {
	if x != nil {
		return x.KeyOffset
	}
	return nil
}

func (x *ObjectReader) GetKeyCutset() []byte {
	if x != nil {
		return x.KeyCutset
	}
	return nil
}

func (x *ObjectReader) GetLogOffset() uint64 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

func (x *ObjectReader) GetWaitTime() int64 {
	if x != nil {
		return x.WaitTime
	}
	return 0
}

type ObjectWriter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode            uint64      `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty" toml:"mode,omitempty"`
	Meta            *ObjectMeta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Data            *ObjectData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty" toml:"data,omitempty"`
	TableName       string      `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty" toml:"table_name,omitempty"`
	PrevVersion     uint64      `protobuf:"varint,5,opt,name=prev_version,json=prevVersion,proto3" json:"prev_version,omitempty" toml:"prev_version,omitempty"`
	PrevDataCheck   uint64      `protobuf:"varint,6,opt,name=prev_data_check,json=prevDataCheck,proto3" json:"prev_data_check,omitempty" toml:"prev_data_check,omitempty"`
	IncrNamespace   string      `protobuf:"bytes,7,opt,name=incr_namespace,json=incrNamespace,proto3" json:"incr_namespace,omitempty" toml:"incr_namespace,omitempty"`
	PrevAttrs       uint64      `protobuf:"varint,8,opt,name=prev_attrs,json=prevAttrs,proto3" json:"prev_attrs,omitempty" toml:"prev_attrs,omitempty"`
	PrevIncrId      uint64      `protobuf:"varint,9,opt,name=prev_incr_id,json=prevIncrId,proto3" json:"prev_incr_id,omitempty" toml:"prev_incr_id,omitempty"`
	ProposalExpired uint64      `protobuf:"varint,16,opt,name=proposal_expired,json=proposalExpired,proto3" json:"proposal_expired,omitempty" toml:"proposal_expired,omitempty"`
}

func (x *ObjectWriter) Reset() {
	*x = ObjectWriter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectWriter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectWriter) ProtoMessage() {}

func (x *ObjectWriter) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectWriter.ProtoReflect.Descriptor instead.
func (*ObjectWriter) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{4}
}

func (x *ObjectWriter) GetMode() uint64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *ObjectWriter) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ObjectWriter) GetData() *ObjectData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ObjectWriter) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *ObjectWriter) GetPrevVersion() uint64 {
	if x != nil {
		return x.PrevVersion
	}
	return 0
}

func (x *ObjectWriter) GetPrevDataCheck() uint64 {
	if x != nil {
		return x.PrevDataCheck
	}
	return 0
}

func (x *ObjectWriter) GetIncrNamespace() string {
	if x != nil {
		return x.IncrNamespace
	}
	return ""
}

func (x *ObjectWriter) GetPrevAttrs() uint64 {
	if x != nil {
		return x.PrevAttrs
	}
	return 0
}

func (x *ObjectWriter) GetPrevIncrId() uint64 {
	if x != nil {
		return x.PrevIncrId
	}
	return 0
}

func (x *ObjectWriter) GetProposalExpired() uint64 {
	if x != nil {
		return x.ProposalExpired
	}
	return 0
}

type ObjectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  uint64        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty"`
	Meta    *ObjectMeta   `protobuf:"bytes,8,opt,name=meta,proto3" json:"meta,omitempty" toml:"meta,omitempty"`
	Items   []*ObjectItem `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
	Next    bool          `protobuf:"varint,12,opt,name=next,proto3" json:"next,omitempty" toml:"next,omitempty"`
}

func (x *ObjectResult) Reset() {
	*x = ObjectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectResult) ProtoMessage() {}

func (x *ObjectResult) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectResult.ProtoReflect.Descriptor instead.
func (*ObjectResult) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{5}
}

func (x *ObjectResult) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ObjectResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ObjectResult) GetMeta() *ObjectMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ObjectResult) GetItems() []*ObjectItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ObjectResult) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type BatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string       `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty" toml:"table_name,omitempty"`
	Items     []*BatchItem `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{6}
}

func (x *BatchRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *BatchRequest) GetItems() []*BatchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Reader *ObjectReader `protobuf:"bytes,8,opt,name=reader,proto3" json:"reader,omitempty" toml:"reader,omitempty"`
	Writer *ObjectWriter `protobuf:"bytes,9,opt,name=writer,proto3" json:"writer,omitempty" toml:"writer,omitempty"`
}

func (x *BatchItem) Reset() {
	*x = BatchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchItem) ProtoMessage() {}

func (x *BatchItem) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchItem.ProtoReflect.Descriptor instead.
func (*BatchItem) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{7}
}

func (x *BatchItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BatchItem) GetReader() *ObjectReader {
	if x != nil {
		return x.Reader
	}
	return nil
}

func (x *BatchItem) GetWriter() *ObjectWriter {
	if x != nil {
		return x.Writer
	}
	return nil
}

type BatchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  uint64          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty" toml:"message,omitempty"`
	Items   []*ObjectResult `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
}

func (x *BatchResult) Reset() {
	*x = BatchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResult) ProtoMessage() {}

func (x *BatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResult.ProtoReflect.Descriptor instead.
func (*BatchResult) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{8}
}

func (x *BatchResult) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BatchResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchResult) GetItems() []*ObjectResult {
	if x != nil {
		return x.Items
	}
	return nil
}

type TableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Desc   string       `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty"`
	Status *TableStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty" toml:"status,omitempty"`
}

func (x *TableItem) Reset() {
	*x = TableItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableItem) ProtoMessage() {}

func (x *TableItem) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableItem.ProtoReflect.Descriptor instead.
func (*TableItem) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{9}
}

func (x *TableItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TableItem) GetStatus() *TableStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type TableStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	KeyNum  uint64           `protobuf:"varint,5,opt,name=key_num,json=keyNum,proto3" json:"key_num,omitempty" toml:"key_num,omitempty"`
	DbSize  uint64           `protobuf:"varint,6,opt,name=db_size,json=dbSize,proto3" json:"db_size,omitempty" toml:"db_size,omitempty"`
	Options map[string]int64 `protobuf:"bytes,15,rep,name=options,proto3" json:"options,omitempty" toml:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TableStatus) Reset() {
	*x = TableStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStatus) ProtoMessage() {}

func (x *TableStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStatus.ProtoReflect.Descriptor instead.
func (*TableStatus) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{10}
}

func (x *TableStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableStatus) GetKeyNum() uint64 {
	if x != nil {
		return x.KeyNum
	}
	return 0
}

func (x *TableStatus) GetDbSize() uint64 {
	if x != nil {
		return x.DbSize
	}
	return 0
}

func (x *TableStatus) GetOptions() map[string]int64 {
	if x != nil {
		return x.Options
	}
	return nil
}

type TableListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" toml:"query,omitempty"`
}

func (x *TableListRequest) Reset() {
	*x = TableListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableListRequest) ProtoMessage() {}

func (x *TableListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableListRequest.ProtoReflect.Descriptor instead.
func (*TableListRequest) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{11}
}

func (x *TableListRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type TableListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TableItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
}

func (x *TableListResult) Reset() {
	*x = TableListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableListResult) ProtoMessage() {}

func (x *TableListResult) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableListResult.ProtoReflect.Descriptor instead.
func (*TableListResult) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{12}
}

func (x *TableListResult) GetItems() []*TableItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type TableSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" toml:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty" toml:"desc,omitempty"`
}

func (x *TableSetRequest) Reset() {
	*x = TableSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSetRequest) ProtoMessage() {}

func (x *TableSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSetRequest.ProtoReflect.Descriptor instead.
func (*TableSetRequest) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{13}
}

func (x *TableSetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableSetRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type SysCmdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty" toml:"method,omitempty"`
	Body   []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty" toml:"body,omitempty"`
}

func (x *SysCmdRequest) Reset() {
	*x = SysCmdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysCmdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysCmdRequest) ProtoMessage() {}

func (x *SysCmdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysCmdRequest.ProtoReflect.Descriptor instead.
func (*SysCmdRequest) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{14}
}

func (x *SysCmdRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SysCmdRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type SysCapacity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Use int64 `protobuf:"varint,1,opt,name=use,proto3" json:"use,omitempty" toml:"use,omitempty"`
	Min int64 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty" toml:"min,omitempty"`
	Max int64 `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty" toml:"max,omitempty"`
}

func (x *SysCapacity) Reset() {
	*x = SysCapacity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysCapacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysCapacity) ProtoMessage() {}

func (x *SysCapacity) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysCapacity.ProtoReflect.Descriptor instead.
func (*SysCapacity) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{15}
}

func (x *SysCapacity) GetUse() int64 {
	if x != nil {
		return x.Use
	}
	return 0
}

func (x *SysCapacity) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SysCapacity) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type SysNodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Addr    string                  `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty" toml:"addr,omitempty"`
	Version string                  `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty" toml:"version,omitempty"`
	Uptime  int64                   `protobuf:"varint,12,opt,name=uptime,proto3" json:"uptime,omitempty" toml:"uptime,omitempty"`
	Updated int64                   `protobuf:"varint,13,opt,name=updated,proto3" json:"updated,omitempty" toml:"updated,omitempty"`
	Caps    map[string]*SysCapacity `protobuf:"bytes,14,rep,name=caps,proto3" json:"caps,omitempty" toml:"caps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Props   map[string]string       `protobuf:"bytes,15,rep,name=props,proto3" json:"props,omitempty" toml:"props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SysNodeStatus) Reset() {
	*x = SysNodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysNodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysNodeStatus) ProtoMessage() {}

func (x *SysNodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysNodeStatus.ProtoReflect.Descriptor instead.
func (*SysNodeStatus) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{16}
}

func (x *SysNodeStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysNodeStatus) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SysNodeStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SysNodeStatus) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *SysNodeStatus) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *SysNodeStatus) GetCaps() map[string]*SysCapacity {
	if x != nil {
		return x.Caps
	}
	return nil
}

func (x *SysNodeStatus) GetProps() map[string]string {
	if x != nil {
		return x.Props
	}
	return nil
}

type SysStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" toml:"id,omitempty"`
	Nodes  []*SysNodeStatus        `protobuf:"bytes,8,rep,name=nodes,proto3" json:"nodes,omitempty" toml:"nodes,omitempty"`
	Tables []*TableStatus          `protobuf:"bytes,9,rep,name=tables,proto3" json:"tables,omitempty" toml:"tables,omitempty"`
	Caps   map[string]*SysCapacity `protobuf:"bytes,14,rep,name=caps,proto3" json:"caps,omitempty" toml:"caps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Props  map[string]string       `protobuf:"bytes,15,rep,name=props,proto3" json:"props,omitempty" toml:"props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SysStatus) Reset() {
	*x = SysStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysStatus) ProtoMessage() {}

func (x *SysStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysStatus.ProtoReflect.Descriptor instead.
func (*SysStatus) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{17}
}

func (x *SysStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysStatus) GetNodes() []*SysNodeStatus {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *SysStatus) GetTables() []*TableStatus {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *SysStatus) GetCaps() map[string]*SysCapacity {
	if x != nil {
		return x.Caps
	}
	return nil
}

func (x *SysStatus) GetProps() map[string]string {
	if x != nil {
		return x.Props
	}
	return nil
}

type LogSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty" toml:"addr,omitempty"`
	TableName string   `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty" toml:"table_name,omitempty"`
	LogOffset uint64   `protobuf:"varint,5,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty" toml:"log_offset,omitempty"`
	LogCutset uint64   `protobuf:"varint,6,opt,name=log_cutset,json=logCutset,proto3" json:"log_cutset,omitempty" toml:"log_cutset,omitempty"`
	Keys      [][]byte `protobuf:"bytes,9,rep,name=keys,proto3" json:"keys,omitempty" toml:"keys,omitempty"`
}

func (x *LogSyncRequest) Reset() {
	*x = LogSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSyncRequest) ProtoMessage() {}

func (x *LogSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSyncRequest.ProtoReflect.Descriptor instead.
func (*LogSyncRequest) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{18}
}

func (x *LogSyncRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *LogSyncRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *LogSyncRequest) GetLogOffset() uint64 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

func (x *LogSyncRequest) GetLogCutset() uint64 {
	if x != nil {
		return x.LogCutset
	}
	return 0
}

func (x *LogSyncRequest) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type LogSyncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    uint64        `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty" toml:"action,omitempty"`
	LogOffset uint64        `protobuf:"varint,5,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty" toml:"log_offset,omitempty"`
	LogCutset uint64        `protobuf:"varint,6,opt,name=log_cutset,json=logCutset,proto3" json:"log_cutset,omitempty" toml:"log_cutset,omitempty"`
	Logs      []*ObjectMeta `protobuf:"bytes,8,rep,name=logs,proto3" json:"logs,omitempty" toml:"logs,omitempty"`
	Items     []*ObjectItem `protobuf:"bytes,9,rep,name=items,proto3" json:"items,omitempty" toml:"items,omitempty"`
	NextKeys  [][]byte      `protobuf:"bytes,10,rep,name=next_keys,json=nextKeys,proto3" json:"next_keys,omitempty" toml:"next_keys,omitempty"`
}

func (x *LogSyncReply) Reset() {
	*x = LogSyncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvspec_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSyncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSyncReply) ProtoMessage() {}

func (x *LogSyncReply) ProtoReflect() protoreflect.Message {
	mi := &file_kvspec_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSyncReply.ProtoReflect.Descriptor instead.
func (*LogSyncReply) Descriptor() ([]byte, []int) {
	return file_kvspec_proto_rawDescGZIP(), []int{19}
}

func (x *LogSyncReply) GetAction() uint64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *LogSyncReply) GetLogOffset() uint64 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

func (x *LogSyncReply) GetLogCutset() uint64 {
	if x != nil {
		return x.LogCutset
	}
	return 0
}

func (x *LogSyncReply) GetLogs() []*ObjectMeta {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *LogSyncReply) GetItems() []*ObjectItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LogSyncReply) GetNextKeys() [][]byte {
	if x != nil {
		return x.NextKeys
	}
	return nil
}

var File_kvspec_proto protoreflect.FileDescriptor

var file_kvspec_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x22, 0xf3, 0x01, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6e, 0x63, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x6e,
	0x63, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x4e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x70, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x02, 0x0a, 0x0c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x75, 0x74, 0x73, 0x65, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x43, 0x75, 0x74, 0x73, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x83, 0x03, 0x0a,
	0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x69, 0x6e,
	0x63, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x76, 0x49, 0x6e, 0x63, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22,
	0x60, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x06, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x06, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x09, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6b, 0x65, 0x79,
	0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28,
	0x0a, 0x10, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x44, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x79, 0x6e,
	0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x39,
	0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x3b, 0x0a, 0x0d, 0x53, 0x79, 0x73,
	0x43, 0x6d, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x43, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x92, 0x03, 0x0a, 0x0d,
	0x53, 0x79, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a,
	0x04, 0x63, 0x61, 0x70, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x79, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x61, 0x70,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x63, 0x61, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x79, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x1a, 0x56,
	0x0a, 0x09, 0x43, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x79, 0x73, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x94, 0x03, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35,
	0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x79, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b,
	0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04,
	0x63, 0x61, 0x70, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x79, 0x6e,
	0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x63, 0x61, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x1a, 0x56, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73,
	0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x75, 0x74, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x43, 0x75, 0x74, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0xe7, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x63,
	0x75, 0x74, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67,
	0x43, 0x75, 0x74, 0x73, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62,
	0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x08, 0x6e, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x32, 0xbc, 0x02, 0x0a, 0x06, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x49, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x2e,
	0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b,
	0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b,
	0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x79, 0x6e,
	0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x79, 0x6e,
	0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x53,
	0x79, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x1f, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b,
	0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6d, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e,
	0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x32, 0xbf, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x12, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x1a, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x1e, 0x2e, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x6c,
	0x79, 0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x20, 0x2e, 0x6c, 0x79, 0x6e, 0x6b,
	0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x79,
	0x6e, 0x6b, 0x64, 0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x06, 0x53, 0x79, 0x73, 0x43, 0x6d, 0x64, 0x12, 0x1f, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64, 0x62,
	0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6d,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x79, 0x6e, 0x6b, 0x64,
	0x62, 0x2e, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x0c, 0x48, 0x03, 0x5a, 0x08,
	0x2e, 0x3b, 0x6b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kvspec_proto_rawDescOnce sync.Once
	file_kvspec_proto_rawDescData = file_kvspec_proto_rawDesc
)

func file_kvspec_proto_rawDescGZIP() []byte {
	file_kvspec_proto_rawDescOnce.Do(func() {
		file_kvspec_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvspec_proto_rawDescData)
	})
	return file_kvspec_proto_rawDescData
}

var file_kvspec_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_kvspec_proto_goTypes = []interface{}{
	(*ObjectMeta)(nil),       // 0: lynkdb.kvspec.v2.ObjectMeta
	(*ObjectData)(nil),       // 1: lynkdb.kvspec.v2.ObjectData
	(*ObjectItem)(nil),       // 2: lynkdb.kvspec.v2.ObjectItem
	(*ObjectReader)(nil),     // 3: lynkdb.kvspec.v2.ObjectReader
	(*ObjectWriter)(nil),     // 4: lynkdb.kvspec.v2.ObjectWriter
	(*ObjectResult)(nil),     // 5: lynkdb.kvspec.v2.ObjectResult
	(*BatchRequest)(nil),     // 6: lynkdb.kvspec.v2.BatchRequest
	(*BatchItem)(nil),        // 7: lynkdb.kvspec.v2.BatchItem
	(*BatchResult)(nil),      // 8: lynkdb.kvspec.v2.BatchResult
	(*TableItem)(nil),        // 9: lynkdb.kvspec.v2.TableItem
	(*TableStatus)(nil),      // 10: lynkdb.kvspec.v2.TableStatus
	(*TableListRequest)(nil), // 11: lynkdb.kvspec.v2.TableListRequest
	(*TableListResult)(nil),  // 12: lynkdb.kvspec.v2.TableListResult
	(*TableSetRequest)(nil),  // 13: lynkdb.kvspec.v2.TableSetRequest
	(*SysCmdRequest)(nil),    // 14: lynkdb.kvspec.v2.SysCmdRequest
	(*SysCapacity)(nil),      // 15: lynkdb.kvspec.v2.SysCapacity
	(*SysNodeStatus)(nil),    // 16: lynkdb.kvspec.v2.SysNodeStatus
	(*SysStatus)(nil),        // 17: lynkdb.kvspec.v2.SysStatus
	(*LogSyncRequest)(nil),   // 18: lynkdb.kvspec.v2.LogSyncRequest
	(*LogSyncReply)(nil),     // 19: lynkdb.kvspec.v2.LogSyncReply
	nil,                      // 20: lynkdb.kvspec.v2.TableStatus.OptionsEntry
	nil,                      // 21: lynkdb.kvspec.v2.SysNodeStatus.CapsEntry
	nil,                      // 22: lynkdb.kvspec.v2.SysNodeStatus.PropsEntry
	nil,                      // 23: lynkdb.kvspec.v2.SysStatus.CapsEntry
	nil,                      // 24: lynkdb.kvspec.v2.SysStatus.PropsEntry
}
var file_kvspec_proto_depIdxs = []int32{
	0,  // 0: lynkdb.kvspec.v2.ObjectItem.meta:type_name -> lynkdb.kvspec.v2.ObjectMeta
	1,  // 1: lynkdb.kvspec.v2.ObjectItem.data:type_name -> lynkdb.kvspec.v2.ObjectData
	0,  // 2: lynkdb.kvspec.v2.ObjectWriter.meta:type_name -> lynkdb.kvspec.v2.ObjectMeta
	1,  // 3: lynkdb.kvspec.v2.ObjectWriter.data:type_name -> lynkdb.kvspec.v2.ObjectData
	0,  // 4: lynkdb.kvspec.v2.ObjectResult.meta:type_name -> lynkdb.kvspec.v2.ObjectMeta
	2,  // 5: lynkdb.kvspec.v2.ObjectResult.items:type_name -> lynkdb.kvspec.v2.ObjectItem
	7,  // 6: lynkdb.kvspec.v2.BatchRequest.items:type_name -> lynkdb.kvspec.v2.BatchItem
	3,  // 7: lynkdb.kvspec.v2.BatchItem.reader:type_name -> lynkdb.kvspec.v2.ObjectReader
	4,  // 8: lynkdb.kvspec.v2.BatchItem.writer:type_name -> lynkdb.kvspec.v2.ObjectWriter
	5,  // 9: lynkdb.kvspec.v2.BatchResult.items:type_name -> lynkdb.kvspec.v2.ObjectResult
	10, // 10: lynkdb.kvspec.v2.TableItem.status:type_name -> lynkdb.kvspec.v2.TableStatus
	20, // 11: lynkdb.kvspec.v2.TableStatus.options:type_name -> lynkdb.kvspec.v2.TableStatus.OptionsEntry
	9,  // 12: lynkdb.kvspec.v2.TableListResult.items:type_name -> lynkdb.kvspec.v2.TableItem
	21, // 13: lynkdb.kvspec.v2.SysNodeStatus.caps:type_name -> lynkdb.kvspec.v2.SysNodeStatus.CapsEntry
	22, // 14: lynkdb.kvspec.v2.SysNodeStatus.props:type_name -> lynkdb.kvspec.v2.SysNodeStatus.PropsEntry
	16, // 15: lynkdb.kvspec.v2.SysStatus.nodes:type_name -> lynkdb.kvspec.v2.SysNodeStatus
	10, // 16: lynkdb.kvspec.v2.SysStatus.tables:type_name -> lynkdb.kvspec.v2.TableStatus
	23, // 17: lynkdb.kvspec.v2.SysStatus.caps:type_name -> lynkdb.kvspec.v2.SysStatus.CapsEntry
	24, // 18: lynkdb.kvspec.v2.SysStatus.props:type_name -> lynkdb.kvspec.v2.SysStatus.PropsEntry
	0,  // 19: lynkdb.kvspec.v2.LogSyncReply.logs:type_name -> lynkdb.kvspec.v2.ObjectMeta
	2,  // 20: lynkdb.kvspec.v2.LogSyncReply.items:type_name -> lynkdb.kvspec.v2.ObjectItem
	15, // 21: lynkdb.kvspec.v2.SysNodeStatus.CapsEntry.value:type_name -> lynkdb.kvspec.v2.SysCapacity
	15, // 22: lynkdb.kvspec.v2.SysStatus.CapsEntry.value:type_name -> lynkdb.kvspec.v2.SysCapacity
	3,  // 23: lynkdb.kvspec.v2.Public.Query:input_type -> lynkdb.kvspec.v2.ObjectReader
	4,  // 24: lynkdb.kvspec.v2.Public.Commit:input_type -> lynkdb.kvspec.v2.ObjectWriter
	6,  // 25: lynkdb.kvspec.v2.Public.BatchCommit:input_type -> lynkdb.kvspec.v2.BatchRequest
	14, // 26: lynkdb.kvspec.v2.Public.SysCmd:input_type -> lynkdb.kvspec.v2.SysCmdRequest
	4,  // 27: lynkdb.kvspec.v2.Internal.Prepare:input_type -> lynkdb.kvspec.v2.ObjectWriter
	4,  // 28: lynkdb.kvspec.v2.Internal.Accept:input_type -> lynkdb.kvspec.v2.ObjectWriter
	18, // 29: lynkdb.kvspec.v2.Internal.LogSync:input_type -> lynkdb.kvspec.v2.LogSyncRequest
	14, // 30: lynkdb.kvspec.v2.Internal.SysCmd:input_type -> lynkdb.kvspec.v2.SysCmdRequest
	5,  // 31: lynkdb.kvspec.v2.Public.Query:output_type -> lynkdb.kvspec.v2.ObjectResult
	5,  // 32: lynkdb.kvspec.v2.Public.Commit:output_type -> lynkdb.kvspec.v2.ObjectResult
	8,  // 33: lynkdb.kvspec.v2.Public.BatchCommit:output_type -> lynkdb.kvspec.v2.BatchResult
	5,  // 34: lynkdb.kvspec.v2.Public.SysCmd:output_type -> lynkdb.kvspec.v2.ObjectResult
	5,  // 35: lynkdb.kvspec.v2.Internal.Prepare:output_type -> lynkdb.kvspec.v2.ObjectResult
	5,  // 36: lynkdb.kvspec.v2.Internal.Accept:output_type -> lynkdb.kvspec.v2.ObjectResult
	19, // 37: lynkdb.kvspec.v2.Internal.LogSync:output_type -> lynkdb.kvspec.v2.LogSyncReply
	5,  // 38: lynkdb.kvspec.v2.Internal.SysCmd:output_type -> lynkdb.kvspec.v2.ObjectResult
	31, // [31:39] is the sub-list for method output_type
	23, // [23:31] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_kvspec_proto_init() }
func file_kvspec_proto_init() {
	if File_kvspec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvspec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectReader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectWriter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysCmdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysCapacity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysNodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvspec_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSyncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvspec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kvspec_proto_goTypes,
		DependencyIndexes: file_kvspec_proto_depIdxs,
		MessageInfos:      file_kvspec_proto_msgTypes,
	}.Build()
	File_kvspec_proto = out.File
	file_kvspec_proto_rawDesc = nil
	file_kvspec_proto_goTypes = nil
	file_kvspec_proto_depIdxs = nil
}
